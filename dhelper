#!/usr/bin/env bash

if [[ -z "${BASH}" ]]; then
    echo "This script can only run in bash. Exiting..." >&2
    exit 255
fi

if [[ ! -d ".dhelper" || ! -f ".dhelper/arg_parse.bash" ]]; then
    echo ".dhelper/arg_parse.bash is missing! Critical dependency! Exiting..." >&2
    exit 255
fi
source .dhelper/arg_parse.bash

# if [[ ! -f ".dhelper/dag.bash" ]]; then
#     error ".dhelper/dag.bash is missing! Critical dependency! Exiting..." 255
# fi
# source .dhelper/dag.bash

# if [[ ! -f ".dhelper/test.bash" ]]; then
#     error ".dhelper/test.bash is missing! Critical dependency! Exiting..." 255
# fi
# source .dhelper/test.bash

if [[ ! -d "targets/" ]]; then
    error "no target directory! Nothing to run! Exiting..." 255
fi

if [[ ! -f "targets/common.bash" ]]; then
    error "Missing common target! Critical dependency! Exiting..." 255
fi
source targets/common.bash

function init () {
    [[ ! -f .env ]] && echo -e "\n\n\n" > .env
    source .env
}

function cleanup () {
    return
}

# ================================================================================================
#                                               MAIN
function main () {
    init

    validate_flags
    execute_flags

    [[ ${IGNORE_DEPENDENCIES} -eq 0 ]] && validate_dependencies
    validate_target

    cleanup
}


main

